print(Hello)
print("Hello")
library(tidyverse)
library(lubridate)
# Dataset of List of pitchers having received tommy john
setwd("C:/Users/pgill/Documents/Data Science Portfolio/TJ_survival")
tj_list <- read_csv("tj_list_mlb.csv")
tj_list$`TJ Surgery Date` <- mdy(tj_list$`TJ Surgery Date`)
tj_list <- tj_list %>%
select(Player:Position, Age, mlbamid, fgid) %>%
filter(Position == "P", Level == "MLB") %>%
arrange(mlbamid)
tj_list <- tj_list %>%
arrange(`TJ Surgery Date`, mlbamid)
tj_list$Team <- as.factor(tj_list$Team)
tj_list$Player[duplicated(tj_list$Player) == TRUE]
tj_list$mlbamid[duplicated(tj_list$mlbamid) == TRUE]
# Load in the pitching appearance data
setwd("C:/Users/pgill/Documents/Data Science Portfolio/TJ_survival/Appearance data/baseballdatabank-2019.2/baseballdatabank-2019.2/core/")
people <- read_csv("People.csv")
people <- people %>%
select(playerID, nameFirst, nameLast, nameGiven, finalGame)
pitchers <-  read_csv("Pitching.csv")
pitchers <- pitchers %>%
select(playerID) %>%
arrange(playerID) %>%
unique.data.frame()
# Join the pitchers and people tables
pitcher_list <- inner_join(people, pitchers, "playerID")
pitcher_list$Player <- paste(pitcher_list$nameFirst,  pitcher_list$nameLast)
pitcher_list$Player[duplicated(pitcher_list$Player) == TRUE]
tj_final_game <- inner_join(tj_list, pitcher_list, "Player")
# There are 7 fewer rows here than in tj_list which I don't know why they're missing. That needs to be looked into.
# The issue is some of the people in the pitchers list appear as duplicates because they have the same name but
# different middle names but are being counted as the same so I need to resolve that.
tj_final_game <- tj_final_game %>%
select(Player:Team, Age:playerID, finalGame)
tj_list$Player[duplicated(tj_list$Player) == TRUE]
tj_list$mlbamid[duplicated(tj_list$mlbamid) == TRUE]
tj_list %>%
select(Player, mlbamid) %>%
filter(mlbamid == 114023)
tj_list %>%
select(Player, mlbamid) %>%
filter(mlbamid == 120036)
multiple_tj <- tj_list$Player[duplicated(tj_list$Player) == TRUE]
multiple_tj
class(multiple_tj)
multiple_tj[1]
multiple_tj[2]
length(multiple_tj)
pitcher_list$Player[duplicated(pitcher_list$Player) == TRUE]
pitchers_duplicated <- pitcher_list$Player[duplicated(pitcher_list$Player) == TRUE]
length(pitchers_duplicated)
pitchers_duplicated[171]
?intersect
intersect(multiple_tj, pitchers_duplicated)
as.vector(multiple_tj)
multiple_tj <- as.vector(tj_list$Player[duplicated(tj_list$Player) == TRUE])
multiple_tj
class(multiple_tj)
mode(tj_list)
mode(pitchers_duplicated)
multiple_tj <- as.vector(tj_list$Player[duplicated(tj_list$Player) == TRUE])
mode(multiple_tj)
mode(pitchers_duplicated)
intersect(multiple_tj, pitchers_duplicated)
multiple_tj <- tj_list$Player[duplicated(tj_list$Player) == TRUE]
Reduce(intersect, list(multiple_tj, pitchers_duplicated))
29*171
multiple_tj["Tim Collins"]
multiple_tj[multiple_tj == "Tim Collins"]
#####
# There would be a better way of doing this but try to identify if any of the players with multiple TJ's
# overlap with the players with the same name.
for (i in 1:length(tj_list)) {
print(tj_list[i])
}
#####
# There would be a better way of doing this but try to identify if any of the players with multiple TJ's
# overlap with the players with the same name.
for (i in 1:length(tj_list)) {
print(multiple_tj[i])
}
#####
# There would be a better way of doing this but try to identify if any of the players with multiple TJ's
# overlap with the players with the same name.
for (i in 1:length(multiple_tj)) {
print(multiple_tj[i])
}
#####
# There would be a better way of doing this but try to identify if any of the players with multiple TJ's
# overlap with the players with the same name.
for (i in 1:length(multiple_tj)) {
print(i)
print(multiple_tj[i])
}
for (j in 1:length(pitchers_duplicated)) {
print(j)
print(pitchers_duplicated[i])
}
for (j in 1:length(pitchers_duplicated)) {
print(j)
print(pitchers_duplicated[j])
}
pitcher_list %>%
filter(Player == "Jim Wright")
for (k in 1:length(multiple_tj)) {
for (l in 1:length(pitchers_duplicated)) {
if (multiple_tj[k] == pitchers_duplicated[l]) {
print(multiple_tj[k])
}
}
}
for (k in 1:length(multiple_tj)) {
for (l in 1:length(pitchers_duplicated)) {
if (multiple_tj[k] == pitchers_duplicated[l]) {
print(multiple_tj[k])
}
else {
print("No Match")
}
}
}
# There are 7 fewer rows here than in tj_list which I don't know why they're missing. That needs to be looked into.
# The issue is some of the people in the pitchers list appear as duplicates because they have the same name but
# different middle names but are being counted as the same so I need to resolve that.
tj_final_game <- tj_final_game %>%
select(Player:Team, Age:playerID, finalGame)
tj_final_game
tj_final_game %>%
select(Player %>%)
tj_final_game %>%
select(Player) %>%
filter(Player == pitchers_duplicated)
tj_list
pitcher_list
pitcher_list <- inner_join(people, pitchers, "playerID")
pitcher_list$Player <- paste(pitcher_list$nameFirst,  pitcher_list$nameLast)
pitcher_list$Player[duplicated(pitcher_list$Player) == TRUE]
pitchers_duplicated <- pitcher_list$Player[duplicated(pitcher_list$Player) == TRUE]
pitcher_list
pitcher_list %>%
filter(finalGame > 1970-01-01)
pitcher_list <- pitcher_list %>% filter(finalGame >= 1970-01-01)
pitcher_list
pitcher_list %>%
arrange(finalGame)
pitcher_list <- inner_join(people, pitchers, "playerID")
pitcher_list$Player <- paste(pitcher_list$nameFirst,  pitcher_list$nameLast)
pitcher_list %>%
arrange(finalGame)
tj_list %>%
filter(Player == "Tommy John")
pitcher_list <- pitcher_list %>% filter(finalGame >= 1970-01-01)
pitcher_list <- inner_join(people, pitchers, "playerID")
pitcher_list$Player <- paste(pitcher_list$nameFirst,  pitcher_list$nameLast)
pitcher_list %>% filter(Player == "Tommy John")
tj_list
pitcher_list <- pitcher_list %>% filter(finalGame >= 1970-01-01)
pitcher_list
pitcher_list %>%
arrange(finalGame)
as.list(pitchers_duplicated)
as.vector(pitchers_duplicated)
class(pitchers_duplicated)
class(as.vector(pitchers_duplicated))
class(tj_list)
class(as.list(pitchers_duplicated))
%in%
?%in%
tj_list %in% pitchers_duplicated
pitchers_duplicated %in% tj_list
tj_list
multiple_tj
multiple_tj %in% pitchers_duplicated
multiple_tj !%in% pitchers_duplicated
!(multiple_tj %in% pitchers_duplicated)
pitcher_list
pitcher_list %>%
pitchers_duplicated %in% pitchers_duplicated
pitcher_list %>%
filter(pitchers_duplicated %in% pitchers_duplicated)
pitcher_list %>%
filter(Player == (pitchers_duplicated %in% pitchers_duplicated))
subset(pitcher_list, !(pitchers_duplicated %in% pitcher_list))
test <- subset(pitcher_list, !(pitchers_duplicated %in% pitcher_list))
test
pitch]
pitcher_list
pitchers_duplicated
pitcher_list
pitchers_duplicated
pitchers_duplicated <- as.data.frame(pitchers_duplicated)
pitchers_duplicated
dim(pitchers_duplicated)
?colnames
colnames(pitchers_duplicated)
colnames(pitchers_duplicated) <- Player
colnames(pitchers_duplicated) <- "Player"
pitchers_duplicated
pitcher_list
pitcher_list %>%
anti_join(pitchers_duplicated, by = "Player")
pitcher_list
pitcher_list <- pitcher_list %>%
anti_join(pitchers_duplicated, by = "Player")
pitcher_list
4921-4768
pitcher_list$Player[duplicated(pitcher_list$Player) == TRUE]
duplicated(pitcher_list$Player)
pitcher_list <- pitcher_list %>%
anti_join(pitchers_duplicated, by = "Player")
# Dataset of List of pitchers having received tommy john
setwd("C:/Users/pgill/Documents/Data Science Portfolio/TJ_survival")
tj_list <- read_csv("tj_list_mlb.csv")
tj_list$`TJ Surgery Date` <- mdy(tj_list$`TJ Surgery Date`)
tj_list <- tj_list %>%
select(Player:Position, Age, mlbamid, fgid) %>%
filter(Position == "P", Level == "MLB") %>%
arrange(mlbamid)
tj_list <- tj_list %>%
arrange(`TJ Surgery Date`, mlbamid)
tj_list$Team <- as.factor(tj_list$Team)
function (dir)
# Dataset of List of pitchers having received tommy john
setwd("C:/Users/pgill/Documents/Data Science Portfolio/TJ_survival")
tj_list <- read_csv("tj_list_mlb.csv")
tj_list$`TJ Surgery Date` <- mdy(tj_list$`TJ Surgery Date`)
tj_list <- tj_list %>%
select(Player:Position, Age, mlbamid, fgid) %>%
filter(Position == "P", Level == "MLB") %>%
arrange(mlbamid)
tj_list <- tj_list %>%
arrange(`TJ Surgery Date`, mlbamid)
tj_list$Team <- as.factor(tj_list$Team)
tj_list$Player[duplicated(tj_list$Player) == TRUE]
tj_list$mlbamid[duplicated(tj_list$mlbamid) == TRUE]
multiple_tj <- tj_list$Player[duplicated(tj_list$Player) == TRUE]
# Load in the pitching appearance data
setwd("C:/Users/pgill/Documents/Data Science Portfolio/TJ_survival/Appearance data/baseballdatabank-2019.2/baseballdatabank-2019.2/core/")
people <- read_csv("People.csv")
people <- people %>%
select(playerID, nameFirst, nameLast, nameGiven, finalGame)
pitchers <-  read_csv("Pitching.csv")
pitchers <- pitchers %>%
select(playerID) %>%
arrange(playerID) %>%
unique.data.frame()
################
#####
# There would be a better way of doing this but try to identify if any of the players with multiple TJ's
# overlap with the players with the same name.
for (k in 1:length(multiple_tj)) {
for (l in 1:length(pitchers_duplicated)) {
if (multiple_tj[k] == pitchers_duplicated[l]) {
print(multiple_tj[k])
}
else {
print("No Match")
}
}
}
pitcher_list <- inner_join(people, pitchers, "playerID")
pitcher_list$Player <- paste(pitcher_list$nameFirst,  pitcher_list$nameLast)
pitcher_list <- pitcher_list %>% filter(finalGame >= 1970-01-01)
pitcher_list$Player[duplicated(pitcher_list$Player) == TRUE]
pitchers_duplicated <- pitcher_list$Player[duplicated(pitcher_list$Player) == TRUE]
pitchers_duplicated <- as.data.frame(pitchers_duplicated)
pitcher_list <- pitcher_list %>%
anti_join(pitchers_duplicated, by = "Player")
tj_final_game <- inner_join(tj_list, pitcher_list, "Player")
pitchers_duplicated
# Dataset of List of pitchers having received tommy john
setwd("C:/Users/pgill/Documents/Data Science Portfolio/TJ_survival")
tj_list <- read_csv("tj_list_mlb.csv")
tj_list$`TJ Surgery Date` <- mdy(tj_list$`TJ Surgery Date`)
tj_list <- tj_list %>%
select(Player:Position, Age, mlbamid, fgid) %>%
filter(Position == "P", Level == "MLB") %>%
arrange(mlbamid)
tj_list <- tj_list %>%
arrange(`TJ Surgery Date`, mlbamid)
tj_list$Team <- as.factor(tj_list$Team)
tj_list$Player[duplicated(tj_list$Player) == TRUE]
#tj_list$mlbamid[duplicated(tj_list$mlbamid) == TRUE]
multiple_tj <- tj_list$Player[duplicated(tj_list$Player) == TRUE]
# Load in the pitching appearance data
setwd("C:/Users/pgill/Documents/Data Science Portfolio/TJ_survival/Appearance data/baseballdatabank-2019.2/baseballdatabank-2019.2/core/")
people <- read_csv("People.csv")
# Dataset of List of pitchers having received tommy john
setwd("C:/Users/pgill/Documents/Data Science Portfolio/TJ_survival")
# Load in the pitching appearance data
setwd("C:/Users/pgill/Documents/Data Science Portfolio/TJ_survival/Appearance data/baseballdatabank-2019.2/baseballdatabank-2019.2/core/")
people <- read_csv("People.csv")
people <- people %>%
select(playerID, nameFirst, nameLast, nameGiven, finalGame)
pitchers <-  read_csv("Pitching.csv")
pitchers <- pitchers %>%
select(playerID) %>%
arrange(playerID) %>%
unique.data.frame()
################
#####
# There would be a better way of doing this but try to identify if any of the players with multiple TJ's
# overlap with the players with the same name.
for (k in 1:length(multiple_tj)) {
for (l in 1:length(pitchers_duplicated)) {
if (multiple_tj[k] == pitchers_duplicated[l]) {
print(multiple_tj[k])
}
else {
print("No Match")
}
}
}
warnings()
pitcher_list <- inner_join(people, pitchers, "playerID")
pitcher_list$Player <- paste(pitcher_list$nameFirst,  pitcher_list$nameLast)
pitcher_list <- pitcher_list %>% filter(finalGame >= 1970-01-01)
pitcher_list$Player[duplicated(pitcher_list$Player) == TRUE]
pitchers_duplicated <- pitcher_list$Player[duplicated(pitcher_list$Player) == TRUE]
pitchers_duplicated <- as.data.frame(pitchers_duplicated)
